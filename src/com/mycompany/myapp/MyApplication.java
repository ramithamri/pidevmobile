package com.mycompany.myapp;

import com.codename1.ui.Button;
import com.codename1.ui.Container;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.ui.Toolbar;
import Entities.SimpleUser;
import Entities.User;
import Forms.FacebookMain;
import Forms.Login;
import Forms.MenuForm;
import Forms.RegisterForm;
import Forms.SplashScreen;
import Services.MessageService;
import com.codename1.components.ImageViewer;
import com.codename1.ui.Command;
import com.codename1.ui.events.ActionEvent;
import com.codename1.ui.events.ActionListener;
import com.codename1.ui.layouts.BorderLayout;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.ui.util.UIBuilder;
import java.io.IOException;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    private Resources theme,themeAymen,themeWajd,themeSalma,themeHamza;
    public static Form mainForm,hi,hi1;
    Form fMainMenu;
    private Button exitBtn,loginFacebookBtn,loginBtn,registerBtn,SalmaBtn,HamzaBtn,AymenBtn;
    private Container mainContainer;
    private Resources themeHelmi;
     private Button addridebtn,listridebtn;
    public void init(Object context) {
        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);
        themeAymen = UIManager.initFirstTheme("/themeAymen");
        themeSalma = UIManager.initFirstTheme("/themeWajd");
        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);
        // Pro only feature, uncomment if you have a pro subscription
        // Log.bindCrashProtection(true);
        themeHamza = UIManager.initFirstTheme("/themeHamza");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);
        themeHelmi = UIManager.initFirstTheme("/themeHelmi");
        Toolbar.setGlobalToolbar(true);
    }
    
    public void start() 
    {
       /* *///ramy
        
        /* if(current != null){
            current.show();
            return;
        }
     //   Storage.getInstance().clearStorage();
        if (SimpleUser.getSplash()==0)
        {
         try 
         {
            SplashScreen sps = new SplashScreen();
            sps.show();
        } catch (IOException ex) {
           
        }
        new java.util.Timer().schedule(new java.util.TimerTask() {
            @Override
            public void run() {
                gotoWajd();
            SimpleUser.setSplash(1);
            }}, 4000 );
        }
        else 
        {
            gotoWajd();
        }*/
        //*******************************************Hamza*********************************************
        if (current != null) {
            current.show();
            return;
        }
        if (com.mycompany.myapp.SimpleUser.getSplash()==0){
         try {
            com.mycompany.myapp.SplashScreen sps = new com.mycompany.myapp.SplashScreen();
            sps.show();
        } catch (IOException ex) {
           
        }
        new java.util.Timer().schedule(new java.util.TimerTask() {
            @Override
            public void run() {gotoHamza();
            com.mycompany.myapp.SimpleUser.setSplash(1);
            }}, 4000 );}
        else {gotoHamza();}
        
        
    }
    public void generateMenu()
{
    
    hi1 = new Form("Chaya3ni");
      
            Command c1 = new Command("add ride") {
            @Override
            public void actionPerformed(ActionEvent evt) 
            {
             MyApplication1 map=new MyApplication1();
             map.show();
            }
        };
             Command c = new Command("search ride") {
            @Override
            public void actionPerformed(ActionEvent evt) {
              Search s=new Search();
             s.show();
            }
        };
         hi1.getToolbar().addCommandToSideMenu("My rides ", null, ev->new ridedriverservices().afficheride() );
          hi1.getToolbar().addCommandToSideMenu(c);
         hi1.getToolbar().addCommandToSideMenu(c1);
       
        
        hi1.show();
    //***********************************************************************************
     
}
    public void gotoramy()
    {
        User session_user=new User(47,"emma@gmail.com","","emma","watson","User");
        
        MessageService sm = new MessageService(session_user);
        sm.init();
        sm.showConversations();
    }
    public void gotoSalma ()
    {
        hi = new Form("Welcome ", new BoxLayout(BoxLayout.Y_AXIS));
        Command c1 = new Command("add ride") {
            @Override
            public void actionPerformed(ActionEvent evt) {
                AddRide m = new AddRide();
                m.show();
            }
        };
        Command c2 = new Command("add Review") {
            @Override
            public void actionPerformed(ActionEvent evt) {
                AddReview m1 = new AddReview();
                m1.show();
            }
        };
        ReviewsService re = new ReviewsService();
        ServiceRide ri = new ServiceRide();
        re.findAll();
        re.findByName();
        hi.getToolbar().addCommandToSideMenu("View your Reviews ", null, ev -> new ReviewsService().findAllBooks());
        hi.getToolbar().addCommandToSideMenu(c2);
        hi.getToolbar().addCommandToSideMenu("View your Rides", null, ev -> new ServiceRide().findAllRides());

        hi.getToolbar().addCommandToSideMenu(c1);

        hi.getToolbar().addCommandToSideMenu("Check out our best Users", null, ev -> new chart().createPieChartForm());
        hi.show();
    }
    public void gotoAymen()
    {
          UIBuilder ui = new UIBuilder();
        UIBuilder.registerCustomComponent("ImageViewer", ImageViewer.class);
        //Form fMainMenu = ui.createContainer(theme, "Main Menu").getComponentForm();
        
        fMainMenu = ui.createContainer(themeAymen, "MainMenu").getComponentForm();
        ImageViewer logo = (ImageViewer)ui.findByName("logo", fMainMenu);
         


  
          fMainMenu.getToolbar().addCommandToSideMenu("Liste des Demandes", null, new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent evt) {
          AfficherRideAnimal affride = new AfficherRideAnimal(themeAymen);
              affride.getF1().show();
          affride.getF1().getToolbar().addCommandToLeftBar("Back", null, e->fMainMenu.showBack());
            
            }
        });
          fMainMenu.show();
          fMainMenu.getToolbar().addCommandToSideMenu("DÃ©poser une Demande", null, (ActionListener) (ActionEvent evt) -> {
              AjoutRideAnimal addride = new AjoutRideAnimal(themeAymen);
              addride.getfRideAnimal().show();
              addride.getfRideAnimal().getToolbar().addCommandToLeftBar("Back", null, e->fMainMenu.showBack());
        });
          fMainMenu.show();
                    
 
          
      
          
          fMainMenu.getToolbar().addCommandToSideMenu("Voir mes Demandes", null, new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent evt) {
                AfficherMesRideAnimal affmesdem = new AfficherMesRideAnimal(themeAymen);
           affmesdem.getF2().show();
         affmesdem.getF2().getToolbar().addCommandToLeftBar("Back", null, e->fMainMenu.showBack());
            
            }
        });
          fMainMenu.show();
    }
    public void gotoWajd()
    {
        if (!(SimpleUser.isAuth()))
    {
    
        themeWajd = UIManager.initFirstTheme("/themeWajd");
        UIBuilder ui = new UIBuilder();
        exitBtn = new Button("Exit");
        exitBtn.getUnselectedStyle().setFgColor(5542241);
        loginFacebookBtn = new Button(themeWajd.getImage("fblogin3.png"));
        loginFacebookBtn.setUIID("CenterLabel");
        SalmaBtn =  new Button("salma");
        
        AymenBtn = new Button("Aymen");
        HamzaBtn = new Button("Hamza");
        loginBtn = new Button("Login");
        loginBtn.getUnselectedStyle().setFgColor(5542241);
        registerBtn = new Button("Register");
        registerBtn.getUnselectedStyle().setFgColor(5542241);
        
        mainContainer = new Container();
        mainContainer.setLayout(new BoxLayout(BoxLayout.Y_AXIS));
        mainContainer.add(loginFacebookBtn);
        mainContainer.add(loginBtn);
        mainContainer.add(registerBtn);
        mainContainer.add(exitBtn);
        mainContainer.add(AymenBtn);
        mainContainer.add(HamzaBtn);
        mainContainer.add(SalmaBtn);
        mainForm=new Form();
        mainForm.setLayout(new BorderLayout());
        mainForm.add(BorderLayout.CENTER,mainContainer);
        
        loginBtn.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent evt) {
                new Login().show();
            }
        });
        SalmaBtn.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent evt) {
                gotoSalma();
            }
        });
        AymenBtn.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent evt) {
                gotoAymen();
            }
        });
        HamzaBtn.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent evt) {
                gotoHamza();
            }
        });
        loginFacebookBtn.addActionListener(new ActionListener() 
        {

            @Override
            public void actionPerformed(ActionEvent evt) {                
                new FacebookMain().start();
            }
        });
        exitBtn.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent evt) {
                        Display.getInstance().exitApplication();
            }
        });
        

        mainForm.show();
    }
    else {
        new MenuForm().show();
    }
    }
    public void gotoHamza ()
    {
        if (current != null) {
            current.show();
            return;
        }
        ListePackages liste = new ListePackages(themeHamza) ;
        liste.show();
    }

    public void stop() {
        current = Display.getInstance().getCurrent();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = Display.getInstance().getCurrent();
        }
    }
    
    public void destroy() {
    }

}
