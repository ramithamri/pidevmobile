package com.mycompany.myapp;

import com.codename1.components.SpanLabel;
import com.codename1.io.CharArrayReader;
import com.codename1.io.ConnectionRequest;
import com.codename1.io.JSONParser;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.io.NetworkEvent;
import com.codename1.io.NetworkManager;

import com.codename1.ui.Toolbar;
import com.codename1.ui.events.ActionListener;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename
 * One</a> for the purpose of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    private Resources theme;

    public void init(Object context) {
        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature, uncomment if you have a pro subscription
        // Log.bindCrashProtection(true);
    }

    public void start() {
        if (current != null) {
            current.show();
            return;
        }
        Form hi = new Form("Hi World");
        SpanLabel sp = new SpanLabel();
        hi.add(sp);
     

        ConnectionRequest con = new ConnectionRequest();
        con.setUrl("http://localhost/codenameone/select.php");
        con.addResponseListener(new ActionListener<NetworkEvent>() {

            @Override
            public void actionPerformed(NetworkEvent evt) {
                System.out.println(getListEtudiant(new String(con.getResponseData())));
                sp.setText(getListEtudiant(new String(con.getResponseData())) + "");
                hi.refreshTheme();

            }
        });
        NetworkManager.getInstance().addToQueue(con);
    }

    public ArrayList<Etudiant> getListEtudiant(String json) {
        ArrayList<Etudiant> listEtudiants = new ArrayList<>();

        try {

            JSONParser j = new JSONParser();

            Map<String, Object> etudiants = j.parseJSON(new CharArrayReader(json.toCharArray()));

            System.out.println();
            List<Map<String, Object>> list = (List<Map<String, Object>>) etudiants.get("etudiant");

            for (Map<String, Object> obj : list) {
                Etudiant e = new Etudiant();
                e.setAge(Integer.parseInt(obj.get("age").toString()));
                e.setCin(obj.get("cin").toString());
                e.setNom(obj.get("nom").toString());
                listEtudiants.add(e);

            }

        } catch (IOException ex) {
         }
        return listEtudiants;

    }

    public void stop() {
        current = Display.getInstance().getCurrent();
        if (current instanceof Dialog) {
            ((Dialog) current).dispose();
            current = Display.getInstance().getCurrent();
        }
    }

    public void destroy() {
    }

}
